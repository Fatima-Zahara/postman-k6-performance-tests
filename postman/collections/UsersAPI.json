{
	"info": {
		"_postman_id": "4fdbd755-993e-43c9-bb32-66a4ed279d66",
		"name": "UsersAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "37647624-4fdbd755-993e-43c9-bb32-66a4ed279d66"
	},
	"item": [
		{
			"name": "List Users",
			"item": [
				{
					"name": "List Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a7e4ed72-12b4-48ea-81e5-dc5724b07d9b",
								"exec": [
									"// Check if the response status code is 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// Parse the response JSON\r",
									"let response = pm.response.json();\r",
									"\r",
									"// Save the 'id' with value 7 to an environment variable\r",
									"if (response.data) {\r",
									"    response.data.forEach(user => {\r",
									"        if (user.id === 7) {\r",
									"            pm.environment.set(\"user_id\", user.id);\r",
									"        }\r",
									"    });\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "7544d00e-9a59-43c9-8508-7cddbed4e4c1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{App_url}}/users?page=2",
							"host": [
								"{{App_url}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List single user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "400c00d6-e213-420a-bade-a2455b53230a",
								"exec": [
									"// Check if the response status code is 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "6b2020f5-3aae-416f-b2d3-2f8a41315b61",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{App_url}}/users?id={{user_id}}",
							"host": [
								"{{App_url}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "id",
									"value": "{{user_id}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "f1df913a-7715-4e51-8c23-d94a0eb22176"
		},
		{
			"name": "Create User",
			"item": [
				{
					"name": "Create user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9f9fd932-1bab-490a-a0df-0d3e7df15b45",
								"exec": [
									"// Check if the response status code is 200\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"// Parse the response JSON\r",
									"let response = pm.response.json();\r",
									"\r",
									"pm.environment.set(\"id\", response.id);\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6bb6e5fb-bfbf-4e80-9b45-de2be118f608",
								"exec": [
									"// Function to generate a random string of a given length\r",
									"function generateRandomString(length) {\r",
									"    let characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
									"    let result = '';\r",
									"    for (let i = 0; i < length; i++) {\r",
									"        result += characters.charAt(Math.floor(Math.random() * characters.length));\r",
									"    }\r",
									"    return result;\r",
									"}\r",
									"\r",
									"// Generate random values for name and job\r",
									"let randomName = generateRandomString(8);  // Generates an 8-character random name\r",
									"let randomJob = generateRandomString(5);   // Generates a 5-character random job\r",
									"\r",
									"// Save the random name and job to environment variables\r",
									"pm.environment.set(\"random_name\", randomName);\r",
									"pm.environment.set(\"random_job\", randomJob);\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "723cdbb9-092b-4de3-91bd-ad26527661d6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{App_url}}/users",
							"host": [
								"{{App_url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				}
			],
			"id": "3010fb2d-d1a5-48a6-8e05-05a8dac874f3"
		},
		{
			"name": "Update Users",
			"item": [
				{
					"name": "Update user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b39daa6c-e297-4586-8bc9-741551f93f57",
								"exec": [
									"// Check if the response status code is 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// Parse the response JSON\r",
									"let response = pm.response.json();\r",
									"\r",
									"pm.environment.set(\"name\", response.name);\r",
									"pm.environment.set(\"job\", response.job);\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"packages": {},
								"type": "text/javascript"
							}
						}
					],
					"id": "1e9798b0-3ecb-4ee5-a0f7-96dd53538fc3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"zion resident\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{App_url}}/users/2?id={{id}}",
							"host": [
								"{{App_url}}"
							],
							"path": [
								"users",
								"2"
							],
							"query": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "87543dda-b0e4-4cab-a282-0aa4a44f3cba"
		},
		{
			"name": "Delete User",
			"item": [
				{
					"name": "Delete user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6ff5f6dc-a1bd-4b18-9b38-352057105081",
								"exec": [
									"// Check if the response status code is 200\r",
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "99b607c2-e8ac-49d8-9625-74042ffacbf9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{App_url}}/users/{{id}}",
							"host": [
								"{{App_url}}"
							],
							"path": [
								"users",
								"{{id}}"
							]
						}
					},
					"response": []
				}
			],
			"id": "fc423145-b0f5-4d51-b185-264b12a27a76"
		},
		{
			"name": "Register user",
			"item": [
				{
					"name": "Register - unsuccessful",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6ca7de86-b90f-4cf6-9ff2-8fefb8dcad22",
								"exec": [
									"// Check if the response status code is 400\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "d2ac9263-97a8-40dc-a7ed-0c6b46eacfc3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"sydney@fife\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{App_url}}/register",
							"host": [
								"{{App_url}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register - successful",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "35319794-2362-42de-b4e8-589d25f1d788",
								"exec": [
									"// Check if the response status code is 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "452ac360-941a-4342-ac56-64bd75e33dfe",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"pistol\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{App_url}}/register",
							"host": [
								"{{App_url}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				}
			],
			"id": "b45e4c1a-9c84-4c68-b20c-7849b38fe6bc"
		}
	]
}